this.createjs = this.createjs || {},
function() {
    var i = function(i, t) {
        this.initialize(i, t)
    },
    t = i.prototype = new createjs.DisplayObject;
    t.image = null,
    t.snapToPixel = !0,
    t.scale9Grid = null,
    t.drawWidth = 0,
    t.drawHeight = 0,
    t.DisplayObject_initialize = t.initialize,
    t.initialize = function(i, t) {
        "string" == typeof i ? (this.image = new Image, this.image.src = i) : this.image = i,
        this.drawWidth = this.image.width,
        this.drawHeight = this.image.height,
        this.scale9Grid = t
    },
    t.setDrawSize = function(i, t) {
        this.drawWidth = i,
        this.drawHeight = t
    },
    t.isVisible = function() {
        var i = this.cacheCanvas || this.image && (this.image.complete || this.image.getContext || this.image.readyState >= 2);
        return !! (this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && i)
    },
    t.DisplayObject_draw = t.draw,
    t.draw = function(i, t) {
        if (this.DisplayObject_draw(i, t)) return ! 0;
        var e = this.scale9Grid.width,
        a = this.scale9Grid.height;
        if (0 == e) {
            if (0 == a) throw "One of scale9Grid width or height must be greater than zero.";
            var h = this.image.width,
            s = this.scale9Grid.y,
            r = this.image.height - s - a,
            g = this.drawWidth / h,
            d = s * g,
            m = r * g,
            w = this.drawHeight - d - m;
            i.drawImage(this.image, 0, 0, h, s, 0, 0, this.drawWidth, d),
            i.drawImage(this.image, 0, s, h, a, 0, d, this.drawWidth, w),
            i.drawImage(this.image, 0, s + a, h, r, 0, d + w, this.drawWidth, m)
        } else if (0 == a) {
            var c = this.image.height;
            s = this.scale9Grid.x,
            r = this.image.width - s - e,
            g = this.drawHeight / this.image.height,
            d = s * g,
            m = r * g,
            w = this.drawWidth - d - m,
            i.drawImage(this.image, 0, 0, s, c, 0, 0, d, this.drawHeight),
            i.drawImage(this.image, s, 0, e, c, d, 0, w, this.drawHeight),
            i.drawImage(this.image, s + e, 0, r, c, d + w, 0, m, this.drawHeight)
        } else {
            var n = this.scale9Grid.x,
            l = this.scale9Grid.y,
            o = this.image.width - e - n,
            u = this.image.height - a - l,
            I = this.drawWidth - n - o,
            f = this.drawHeight - l - u;
            i.drawImage(this.image, 0, 0, n, l, 0, 0, n, l),
            i.drawImage(this.image, n, 0, e, l, n, 0, I, l),
            i.drawImage(this.image, n + e, 0, o, l, n + I, 0, o, l),
            i.drawImage(this.image, 0, l, n, a, 0, l, n, f),
            i.drawImage(this.image, n, l, e, a, n, l, I, f),
            i.drawImage(this.image, n + e, l, o, a, n + I, l, o, f),
            i.drawImage(this.image, 0, l + a, n, u, 0, l + f, n, u),
            i.drawImage(this.image, n, l + a, e, u, n, l + f, I, u),
            i.drawImage(this.image, n + e, l + a, o, u, n + I, l + f, o, u)
        }
        return ! 0
    },
    t.clone = function() {
        var t = new i(this.image, this.scale9Grid.clone());
        return this.sourceRect && (t.sourceRect = this.sourceRect.clone()),
        this.cloneProps(t),
        t
    },
    t.toString = function() {
        return "[ScaleBitmap (name=" + this.name + ")]"
    },
    createjs.ScaleBitmap = i
} ();